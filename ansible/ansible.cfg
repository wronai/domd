[defaults]
# Basic settings
inventory = inventory/
# roles_path = roles:./roles

# Sudo settings
ask_become_pass = True
pipelining = True

# Performance optimizations
forks = 10
host_key_checking = False
retry_files_enabled = False
gathering = smart
fact_caching = jsonfile
fact_caching_connection = ~/.ansible/facts
fact_caching_timeout = 86400

# SSH settings
[ssh_connection]
ssh_args = -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
control_path = ~/.ansible/cp/ansible-ssh-%%h-%%p-%%r
scp_if_ssh = smart
pipelining = True

[privilege_escalation]
become = True
become_method = sudo
become_ask_pass = True
become_user = root
# library = library
# module_utils = module_utils
# remote_tmp = ~/.ansible/tmp
# local_tmp = ~/.ansible/tmp
# forks = 5
# poll_interval = 15
# sudo_user = root
# ask_sudo_pass = True
# ask_pass = True
# transport = smart
# remote_port = 22
# module_lang = C
# gathering = implicit
# host_key_checking = False
# log_path = /var/log/ansible.log
# module_name = command
# executable = /bin/sh
# hash_behaviour = replace
# jinja2_extensions = jinja2.ext.do,jinja2.ext.i18n
# private_key_file = ~/.ssh/id_rsa
# display_skipped_hosts = True
# error_on_undefined_vars = True
# timeout = 10

# SSH settings
[ssh_connection]
# ssh_args = -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
# control_path = ~/.ansible/cp/ansible-ssh-%%h-%%p-%%r
# scp_if_ssh = smart
# pipelining = False

# Privilege escalation
[privilege_escalation]
# become = True
# become_method = sudo
# become_user = root
# become_ask_pass = False

# Settings for ansible-pull
[inventory]
# enable_plugins = host_list, script, auto, yaml, ini, toml

# Settings for paramiko
[paramiko_connection]
# record_host_keys = True

# Settings for persistent connections
[persistent_connection]
# connect_timeout = 30
# command_timeout = 30

# Settings for fact caching
[defaults]
# fact_caching = jsonfile
# fact_caching_connection = ~/.ansible/facts
# fact_caching_timeout = 86400

# Settings for callback plugins
[defaults]
# stdout_callback = yaml
# bin_ansible_callbacks = False

# Settings for colors
[colors]
# highlight = white
# verbose = blue
# warn = bright purple
# error = red
# debug = dark gray
# ok = green
# changed = yellow
# skipped = cyan
# unreachable = red
# failed = bright red

# Settings for diff output
[defaults]
# diff_always = False
# diff = False
# nocows = 1

# Settings for vault
[defaults]
# vault_password_file = ~/.vault_pass.txt
# ask_vault_pass = False
# vault_identity_list = @/path/to/vault-id-list

# Settings for callback_whitelist
[defaults]
# callback_whitelist = timer, mail, log_plays, logstash, slack

# Settings for retry files
[defaults]
# retry_files_enabled = True
# retry_files_save_path = ~/.ansible/retry-files

# Settings for fact gathering
[defaults]
# gather_subset = all
# gather_timeout = 10
# fact_path = /etc/ansible/facts.d

# Settings for the 'local' connection plugin
[connection_plugins]
# local = local

# Settings for the 'docker' connection plugin
[docker_connection]
# remote_user = root
# container_timeout = 10

# Settings for the 'winrm' connection plugin
[winrm]
# config_path = /etc/winrm/winrm.ini
# port = 5986
# transport = ntlm
# server_cert_validation = ignore
# kerberos_delegation = False
# read_timeout_sec = 30
# operation_timeout_sec = 20

# Settings for the 'network_cli' connection plugin
[persistent_connection]
# command_timeout = 30
# connect_timeout = 30
# persistent_connect_timeout = 30
# persistent_command_timeout = 30

# Settings for the 'httpapi' connection plugin
[httpapi]
# api_timeout = 60

# Settings for the 'netconf' connection plugin
[netconf]
# netconf_ssh_config = /path/to/ssh/config
# netconf_ssh_keyfile = /path/to/ssh/key
# netconf_ssh_user = username
# netconf_ssh_pass = password
# netconf_ssh_host_key_checking = True

# Settings for the 'network_cli' connection plugin
[network_cli]
# ssh_type = paramiko
# ssh_args = -o ControlMaster=auto -o ControlPersist=60s
# host_key_checking = False
# persistent_connect_timeout = 30
# persistent_command_timeout = 30
# persistent_connect_retries = 30

# Settings for the 'local' connection plugin
[local]
# executable = /bin/sh

# Settings for the 'chroot' connection plugin
[chroot]
# chroot_path = /srv/chroot
# chroot_group = chroot
# chroot_user = root
# chroot_command = /bin/bash

# Settings for the 'jail' connection plugin
[jail]
# jail_path = /jail
# jail_user = root
# jail_group = wheel
# jail_command = /bin/sh

# Settings for the 'lxc' connection plugin
[lxc]
# lxc_path = /var/lib/lxc
# lxc_sudo = False
# lxc_sudo_user = root
# lxc_sudo_pass = None

# Settings for the 'lxd' connection plugin
[lxd]
# lxd_remote = local
# lxd_cert = ~/.config/lxc/client.crt
# lxd_key = ~/.config/lxc/client.key
# lxd_verify = True

# Settings for the 'kubectl' connection plugin
[k8s]
# kubeconfig = ~/.kube/config
# context = my-context
# namespace = default
# api_key = my-api-key
# host = https://kubernetes.default.svc
# username = admin
# password = secret
# validate_certs = True
# ssl_ca_cert = /path/to/ca.crt
# cert_file = /path/to/cert.crt
# key_file = /path/to/key.key

# Settings for the 'docker' connection plugin
[docker]
# docker_host = unix://var/run/docker.sock
# tls_hostname = localhost
# api_version = auto
# timeout = 60
# cacert_path = ~/.docker/ca.pem
# cert_path = ~/.docker/cert.pem
# key_path = ~/.docker/key.pem
# ssl_version = TLSv1_2
# tls = True
# tls_verify = True
# use_ssh_client = False

# Settings for the 'podman' connection plugin
[podman]
# podman_host = unix:///run/podman/podman.sock
# podman_cert_path = ~/.local/share/containers/podman/machine/podman-machine-default
# podman_tls_verify = True
# podman_socket_path = /run/podman/podman.sock
# podman_remote_path = podman
# podman_remote_args = --remote
# podman_remote_authfile = ~/.docker/config.json
