# DoMD - Lista zadań refaktoryzacyjnych

## Naprawy pilne (krótkoterminowe)
1. [x] Naprawić błąd raportowania wykonanych komend w CLI
   - [x] Poprawić funkcję print_summary w cli.py, aby używała rzeczywistej liczby przetestowanych komend
   - [x] Zaktualizować typy w CommandHandler, aby odzwierciedlały mieszane typy (Command i Dict)

## Refaktoryzacja architektury (średnioterminowa)
1. [x] Wprowadzić czystą architekturę warstwową
   - [x] Stworzyć katalog core/domain z modelami domenowymi
   - [x] Zdefiniować jasne modele Command i CommandResult
   - [x] Oddzielić wynik wykonania komendy od samej komendy

2. [x] Wprowadzić wzorzec portów i adapterów
   - [x] Zdefiniować interfejsy dla repozytoriów komend
   - [x] Zdefiniować interfejsy dla wykonawców komend
   - [x] Zdefiniować interfejsy dla formaterów raportów

3. [x] Zaimplementować usługi biznesowe
   - [x] CommandService do zarządzania wykonaniem komend
   - [x] ReportService do generowania raportów
   - [ ] ProjectService do zarządzania projektem

4. [x] Zaimplementować adaptery
   - [x] CLI adapter (CommandPresenter)
   - [x] Adapter formatera Markdown
   - [x] Adapter repozytorium w pamięci

5. [x] Wprowadzić wzorzec fabryki
   - [x] ApplicationFactory do tworzenia i łączenia komponentów

## Rozszerzenia (długoterminowe)
1. [ ] Dodać REST API
   - [ ] Zaimplementować adapter REST
   - [ ] Dodać dokumentację API (Swagger/OpenAPI)

2. [ ] Dodać interfejs webowy
   - [ ] Zaimplementować prosty interfejs webowy do zarządzania komendami

3. [ ] Dodać integrację z systemami CI/CD
   - [ ] Dodać adapter dla GitLab CI
   - [ ] Dodać adapter dla GitHub Actions

4. [ ] Dodać system wtyczek
   - [ ] Zdefiniować interfejs wtyczek
   - [ ] Dodać mechanizm ładowania wtyczek

## Testy
1. [ ] Dodać testy jednostkowe dla każdej warstwy
   - [ ] Testy modeli domenowych
   - [ ] Testy usług biznesowych
   - [ ] Testy adapterów

2. [ ] Dodać testy integracyjne
   - [ ] Testy przepływu komend od wykrycia do raportu
   - [ ] Testy CLI

3. [ ] Dodać testy wydajnościowe
   - [ ] Benchmark wykrywania komend
   - [ ] Benchmark wykonywania komend

TodoMD v0.1.1 - Project Command Detector with .doignore
🔍 Project: /home/tom/github/coboarding/chat
📝 TODO file: TODO.md
🔧 Script file: todo.sh
🚫 Ignore file: .doignore
2025-06-11 22:14:37 - domd.core.project_detection.detector - WARNING - No parsers found in registry, using legacy parsers
2025-06-11 22:14:37 - domd.core.project_detection.detector - INFO - Initialized 11 parsers
2025-06-11 22:14:37 - domd.core.project_detection.detector - INFO - Scanning project: /home/tom/github/coboarding/chat
2025-06-11 22:14:37 - domd.core.project_detection.detector - INFO - Found 50 configuration files
2025-06-11 22:14:37 - domd.core.parsers.pyproject_toml - ERROR - Error parsing /home/tom/github/coboarding/chat/pyproject.toml: What? mypy already exists?{'mypy': {'python_version': '3.12', 'warn_return_any': True, 'warn_unused_configs': True, 'disallow_untyped_defs': True, 'disallow_incomplete_defs': True, 'check_untyped_defs': True, 'disallow_untyped_decorators': True, 'no_implicit_optional': True, 'warn_redundant_casts': True, 'warn_unused_ignores': True, 'warn_no_return': True, 'warn_unreachable': True, 'overrides': [{'module': ['pydantic.*', 'sqlalchemy.*', 'alembic.*', 'uvicorn.*', 'fastapi.*'], 'disallow_untyped_defs': False}]}, 'black': {'line-length': 88, 'target-version': ['py312'], 'include': '\\.pyi?$'}, 'isort': {'profile': 'black', 'line_length': 88, 'multi_line_output': 3, 'include_trailing_comma': True, 'force_grid_wrap': 0, 'use_parentheses': True, 'ensure_newline_before_comments': True}} (line 116 column 1 char 2693)
Traceback (most recent call last):
  File "/home/tom/github/coboarding/chat/venv/lib/python3.12/site-packages/domd/core/parsers/pyproject_toml.py", line 88, in parse
    data = toml_lib.loads(content)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tom/github/coboarding/chat/venv/lib/python3.12/site-packages/toml/decoder.py", line 478, in loads
    raise TomlDecodeError("What? " + group +
toml.decoder.TomlDecodeError: What? mypy already exists?{'mypy': {'python_version': '3.12', 'warn_return_any': True, 'warn_unused_configs': True, 'disallow_untyped_defs': True, 'disallow_incomplete_defs': True, 'check_untyped_defs': True, 'disallow_untyped_decorators': True, 'no_implicit_optional': True, 'warn_redundant_casts': True, 'warn_unused_ignores': True, 'warn_no_return': True, 'warn_unreachable': True, 'overrides': [{'module': ['pydantic.*', 'sqlalchemy.*', 'alembic.*', 'uvicorn.*', 'fastapi.*'], 'disallow_untyped_defs': False}]}, 'black': {'line-length': 88, 'target-version': ['py312'], 'include': '\\.pyi?$'}, 'isort': {'profile': 'black', 'line_length': 88, 'multi_line_output': 3, 'include_trailing_comma': True, 'force_grid_wrap': 0, 'use_parentheses': True, 'ensure_newline_before_comments': True}} (line 116 column 1 char 2693)
2025-06-11 22:14:37 - domd.core.project_detection.detector - INFO - Found 77 commands in total

🧪 Testing 77 commands...
📊 Progress will be updated in TODO.md
2025-06-11 22:14:37 - domd.core.services.command_service - INFO - Executing command: ansible all -i .pre-commit-config.yaml -m ping
2025-06-11 22:14:38 - domd.core.services.command_service - INFO - Executing command: docker build -t chat .

