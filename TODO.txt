# DoMD - Lista zadań refaktoryzacyjnych

## Naprawy pilne (krótkoterminowe)
1. [x] Naprawić błąd raportowania wykonanych komend w CLI
   - [x] Poprawić funkcję print_summary w cli.py, aby używała rzeczywistej liczby przetestowanych komend
   - [x] Zaktualizować typy w CommandHandler, aby odzwierciedlały mieszane typy (Command i Dict)

2. [x] Poprawić obsługę błędów w parserach plików konfiguracyjnych
   - [x] Obsłużyć wyjątki podczas parsowania TOML/JSON/YAML
   - [x] Kontynuować działanie po napotkaniu błędu w pliku konfiguracyjnym
   - [x] Zalogować błędy i dodać je do raportu
   - [x] Przeprowadzić testowanie pozostałych komend, nawet jeśli niektóre się nie powiodły
   - [x] Dodać czytelne komunikaty o błędach do wyjścia programu

3. [x] Zaimplementować integrację z Dockerem
   - [x] Dodać obsługę pliku .dodocker
   - [x] Zaimplementować wykrywanie środowiska Docker
   - [x] Dodać obsługę wykonywania komend w kontenerach
   - [x] Zaktualizować dokumentację Docker
   - [x] Dodać testy integracyjne dla Docker


## Refaktoryzacja architektury (średnioterminowa)
1. [x] Wprowadzić czystą architekturę warstwową
   - [x] Stworzyć katalog core/domain z modelami domenowymi
   - [x] Zdefiniować jasne modele Command i CommandResult
   - [x] Oddzielić wynik wykonania komendy od samej komendy

2. [x] Wprowadzić wzorzec portów i adapterów
   - [x] Zdefiniować interfejsy dla repozytoriów komend
   - [x] Zdefiniować interfejsy dla wykonawców komend
   - [x] Zdefiniować interfejsy dla formaterów raportów

3. [x] Zaimplementować usługi biznesowe
   - [x] CommandService do zarządzania wykonaniem komend
   - [x] ReportService do generowania raportów
   - [ ] ProjectService do zarządzania projektem

4. [x] Zaimplementować adaptery
   - [x] CLI adapter (CommandPresenter)
   - [x] Adapter formatera Markdown
   - [x] Adapter repozytorium w pamięci

5. [x] Wprowadzić wzorzec fabryki
   - [x] ApplicationFactory do tworzenia i łączenia komponentów

## Rozszerzenia (długoterminowe)
1. [ ] Dodać REST API
   - [ ] Zaimplementować adapter REST
   - [ ] Dodać dokumentację API (Swagger/OpenAPI)
   - [ ] Dodać uwierzytelnianie i autoryzację
   - [ ] Dodać endpointy do zarządzania komendami

2. [ ] Dodać interfejs webowy
   - [ ] Zaimplementować prosty interfejs webowy do zarządzania komendami
   - [ ] Dodać podgląd wyników w czasie rzeczywistym
   - [ ] Zaimplementować historię wykonywanych komend

3. [ ] Dodać integrację z systemami CI/CD
   - [ ] Dodać adapter dla GitLab CI
   - [ ] Dodać adapter dla GitHub Actions
   - [ ] Zaimplementować automatyczne generowanie konfiguracji CI/CD

4. [ ] Dodać system wtyczek
   - [ ] Zdefiniować interfejs wtyczek
   - [ ] Dodać mechanizm ładowania wtyczek
   - [ ] Stworzyć przykładowe wtyczki dla popularnych narzędzi

5. [ ] Rozszerzyć wsparcie dla Docker Compose
   - [ ] Dodać wykrywanie plików docker-compose.yml
   - [ ] Zaimplementować wykonywanie komend w usługach zdefiniowanych w Compose
   - [ ] Dodać obsługę zmiennych środowiskowych z plików .env

## Testy
1. [x] Dodać testy jednostkowe dla każdej warstwy
   - [x] Testy modeli domenowych
   - [x] Testy usług biznesowych
   - [x] Testy adapterów
   - [x] Testy integracji z Dockerem

2. [ ] Dodać testy integracyjne
   - [x] Testy przepływu komend od wykrycia do raportu
   - [x] Testy CLI
   - [ ] Testy integracji z systemem plików
   - [ ] Testy integracji z Docker API

3. [ ] Dodać testy wydajnościowe
   - [ ] Benchmark wykrywania komend
   - [ ] Benchmark wykonywania komend
   - [ ] Testy obciążeniowe dla REST API

4. [ ] Ulepszyć pokrycie testowe
   - [ ] Osiągnąć >90% pokrycia kodu
   - [ ] Dodać testy dla przypadków brzegowych
   - [ ] Zaimplementować testy mutacyjne

## Optymalizacje
1. [ ] Optymalizacja wydajności
   - [ ] Zoptymalizować wykrywanie komend
   - [ ] Dodać buforowanie wyników
   - [ ] Zaimplementować równoległe wykonywanie komend

2. [ ] Poprawa użyteczności
   - [ ] Dodać podpowiedzi do CLI
   - [ ] Zaimplementować autouzupełnianie
   - [ ] Dodać więcej przykładów konfiguracji

## Dokumentacja
1. [x] Zaktualizować dokumentację Docker
2. [ ] Dodać przewodniki krok po kroku
3. [ ] Stworzyć tutoriale wideo
4. [ ] Dodać przykłady użycia dla różnych przypadków
5. [ ] Dodać sekcję często zadawanych pytań (FAQ)
