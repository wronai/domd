[tox]
envlist =
    py38,py39,py310,py311,py312,
    lint,docs,security,
    ansible,ansible-lint
isolated_build = true

[testenv]
deps =
    pytest>=7.0
    pytest-cov>=4.0
    pytest-mock>=3.10
    pyyaml>=6.0
    toml>=0.10.2
    ansible-core>=2.12.0  # Required for Ansible testing
    ansible-lint>=6.0.0  # For linting Ansible content
commands =
    python -c "import sys; print('Python version:', sys.version)"
    python -c "import ansible; print('Ansible version:', ansible.__version__)"
    pytest {posargs:tests/}

[testenv:ansible]
description = Run Ansible-specific tests
deps =
    {[testenv]deps}
    ansible-core>=2.12.0
    ansible-lint>=6.0.0
    molecule>=4.0.0
commands =
    pytest tests/test_ansible_*.py -v

[testenv:ansible-lint]
description = Lint Ansible content
deps =
    {[testenv]deps}
    ansible-lint>=6.0.0
commands =
    ansible-lint --version
    # Add your ansible-lint commands here

[testenv:pytest]
deps = {[testenv]deps}
commands = pytest tests/ -v

[testenv:pytest-cov]
deps =
    {[testenv]deps}
    coverage>=7.0
commands =
    pytest tests/ --cov=domd --cov-report=html --cov-report=term --cov-report=xml
    coverage report --show-missing

[testenv:lint]
deps =
    black>=23.0
    isort>=5.0
    flake8>=6.0
    mypy>=1.0
    pylint>=2.17
commands =
    black --check src/ tests/
    isort --check-only src/ tests/
    flake8 src/ tests/
    mypy src/
    pylint src/domd/

[testenv:format]
deps =
    black>=23.0
    isort>=5.0
commands =
    black src/ tests/
    isort src/ tests/

[testenv:docs]
deps =
    mkdocs>=1.5.0
    mkdocs-material>=9.0.0
    mkdocstrings[python]>=0.22.0
commands =
    mkdocs build
    mkdocs serve --dev-addr localhost:8000

[testenv:docs-build]
deps = {[testenv:docs]deps}
commands = mkdocs build

[testenv:security]
deps =
    bandit>=1.7.0
    safety>=2.0.0
commands =
    bandit -r src/
    safety check

[testenv:py38]
basepython = python3.8

[testenv:py39]
basepython = python3.9

[testenv:py310]
basepython = python3.10

[testenv:py311]
basepython = python3.11

[testenv:py312]
basepython = python3.12

[testenv:integration]
deps = {[testenv]deps}
commands = pytest tests/ -m "integration" -v

[testenv:unit]
deps = {[testenv]deps}
commands = pytest tests/ -m "unit" -v

[testenv:slow]
deps = {[testenv]deps}
commands = pytest tests/ -m "slow" -v

[testenv:fast]
deps = {[testenv]deps}
commands = pytest tests/ -m "not slow" -v

[testenv:build]
deps =
    build>=0.10.0
    twine>=4.0.0
commands =
    python -m build
    twine check dist/*

[testenv:clean]
deps =
commands =
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.mypy_cache', ignore_errors=True)"

[coverage:run]
source = src/domd
omit =
    */tests/*
    */test_*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude =
    .git,
    __pycache__,
    build,
    dist,
    .tox,
    .venv,
    *.egg-info,
    .pytest_cache

[mypy]
python_version = 3.8
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[mypy-yaml.*]
ignore_missing_imports = true

[mypy-toml.*]
ignore_missing_imports = true
